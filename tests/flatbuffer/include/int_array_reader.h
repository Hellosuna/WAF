#ifndef INT_ARRAY_READER_H
#define INT_ARRAY_READER_H

/* Generated by flatcc 0.6.1 FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif


typedef const struct IntArray_table *IntArray_table_t;
typedef struct IntArray_table *IntArray_mutable_table_t;
typedef const flatbuffers_uoffset_t *IntArray_vec_t;
typedef flatbuffers_uoffset_t *IntArray_mutable_vec_t;
#ifndef IntArray_file_identifier
#define IntArray_file_identifier 0
#endif
/* deprecated, use IntArray_file_identifier */
#ifndef IntArray_identifier
#define IntArray_identifier 0
#endif
#define IntArray_type_hash ((flatbuffers_thash_t)0xd97ce0a7)
#define IntArray_type_identifier "\xa7\xe0\x7c\xd9"
#ifndef IntArray_file_extension
#define IntArray_file_extension "bin"
#endif



struct IntArray_table { uint8_t unused__; };

static inline size_t IntArray_vec_len(IntArray_vec_t vec)
__flatbuffers_vec_len(vec)
static inline IntArray_table_t IntArray_vec_at(IntArray_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(IntArray_table_t, vec, i, 0)
__flatbuffers_table_as_root(IntArray)

__flatbuffers_define_vector_field(0, IntArray, values, flatbuffers_int32_vec_t, 0)


#include "flatcc/flatcc_epilogue.h"
#endif /* INT_ARRAY_READER_H */
